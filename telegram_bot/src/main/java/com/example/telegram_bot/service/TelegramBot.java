package com.example.telegram_bot.service;

import com.example.telegram_bot.config.BotConfig;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.commands.SetMyCommands;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.commands.BotCommand;
import org.telegram.telegrambots.meta.api.objects.commands.scope.BotCommandScopeDefault;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.methods.send.SendAudio;
import org.telegram.telegrambots.meta.api.methods.send.SendVoice;
import org.telegram.telegrambots.meta.api.objects.InputFile;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

@Component
public class TelegramBot extends TelegramLongPollingBot {

    private final BotConfig config;
    private static final long MANAGER_USER_ID = 6614865222L;
    private final Map<Integer, Long> messageIdToUserIdMap = new ConcurrentHashMap<>();
    private final Map<Long, Map<Integer, Long>> userMessageIdMap = new ConcurrentHashMap<>();

    public TelegramBot(BotConfig config) {
        this.config = config;

        List<BotCommand> listOfCommands = new ArrayList<>();
        listOfCommands.add(new BotCommand("/start", "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–Ω–∏–µ"));

        try {
            this.execute(new SetMyCommands(listOfCommands, new BotCommandScopeDefault(), null));
        } catch (TelegramApiException e) {
            System.out.println("Error setting bot commands: " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return config.getBotName();
    }

    @Override
    public String getBotToken() {
        return config.getToken();
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage()) {
            var message = update.getMessage();

            if (message.getReplyToMessage() != null && message.getChatId() == MANAGER_USER_ID) {
                handleManagerResponse(message.getReplyToMessage(), message.getText());
                return;
            }

            long chatId = message.getChatId();

            if (message.hasText()) {
                String messageText = message.getText();
                if (messageText.equals("/start")) {
                    String name = message.getChat().getFirstName();
                    sendWelcomeMessage(chatId, name);
                } else {
                    forwardToManager(update, chatId, messageText);
                }
            } else if (message.hasPhoto()) {
                forwardMediaToManager(message.getPhoto().get(0).getFileId(), "photo", chatId, update);
            } else if (message.hasVideo()) {
                forwardMediaToManager(message.getVideo().getFileId(), "video", chatId, update);
            } else if (message.hasAudio()) {
                forwardMediaToManager(message.getAudio().getFileId(), "audio", chatId, update);
            } else if (message.hasVoice()) {
                forwardMediaToManager(message.getVoice().getFileId(), "voice", chatId, update);
            }
        } else if (update.hasCallbackQuery()) {
            String callbackData = update.getCallbackQuery().getData();
            long chatId = update.getCallbackQuery().getMessage().getChatId();

            switch (callbackData) {
                case "order":
                    sendOrderMessage(chatId);
                    break;

                case "delivery":
                    sendDeliveryInfo(chatId);
                    break;

                default:
                    sendMessage(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
            }
        }
    }

    private void sendDeliveryInfo(long chatId) {
        String usaDeliveryInfo  = "üì¶ –î–û–°–¢–ê–í–ö–ê –ò–ó –°–®–ê (–û–ù–õ–ê–ô–ù-–ú–ê–ì–ê–ó–ò–ù–´)\n\n" +
                "1 –∫–≥ ‚Üí 25 $ ‚Üí 3400 ‚ÇΩ\n" +
                "2 –∫–≥ ‚Üí 41 $ ‚Üí 5576 ‚ÇΩ\n" +
                "3 –∫–≥ ‚Üí 53 $ ‚Üí 7208 ‚ÇΩ\n" +
                "4 –∫–≥ ‚Üí 71 $ ‚Üí 9676 ‚ÇΩ\n" +
                "5 –∫–≥ ‚Üí 95 $ ‚Üí 12920 ‚ÇΩ\n" +
                "6 –∫–≥ ‚Üí 103 $ ‚Üí 14008 ‚ÇΩ\n" +
                "7 –∫–≥ ‚Üí 111 $ ‚Üí 15156 ‚ÇΩ\n" +
                "8 –∫–≥ ‚Üí 121 $ ‚Üí 16456 ‚ÇΩ\n" +
                "9 –∫–≥ ‚Üí 127 $ ‚Üí 17272 ‚ÇΩ\n" +
                "10 –∫–≥ ‚Üí 129 $ ‚Üí 17544 ‚ÇΩ\n" +
                "11 –∫–≥ ‚Üí 144 $ ‚Üí 19584 ‚ÇΩ\n" +
                "12 –∫–≥ ‚Üí 152 $ ‚Üí 20672 ‚ÇΩ\n" +
                "13 –∫–≥ ‚Üí 159 $ ‚Üí 21624 ‚ÇΩ\n" +
                "14 –∫–≥ ‚Üí 166 $ ‚Üí 22536 ‚ÇΩ\n" +
                "15 –∫–≥ ‚Üí 168 $ ‚Üí 22848 ‚ÇΩ\n\n" +
                "–°—Ä–æ–∫: 15 –¥–Ω–µ–π ‚Äî 6 –Ω–µ–¥–µ–ª—å\n" +
                "–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö –ø–æ –∫—É—Ä—Å—É –µ–≤—Ä–æ –Ω–∞ 13.01.2025 –∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.\n\n" +
                "üì¶ –î–û–°–¢–ê–í–ö–ê (–ó–ê–ö–ê–ó–´ –° –ö–û–°–ú–ï–¢–ò–ö–û–ô) –ò–ó –°–®–ê\n\n" +
                "1 –∫–≥ ‚Üí 36 $ ‚Üí 4896 ‚ÇΩ\n" +
                "2 –∫–≥ ‚Üí 58 $ ‚Üí 7888 ‚ÇΩ\n" +
                "3 –∫–≥ ‚Üí 81 $ ‚Üí 11016 ‚ÇΩ\n" +
                "4 –∫–≥ ‚Üí 106 $ ‚Üí 14416 ‚ÇΩ\n" +
                "5 –∫–≥ ‚Üí 133 $ ‚Üí 18008 ‚ÇΩ\n" +
                "6 –∫–≥ ‚Üí 153 $ ‚Üí 20808 ‚ÇΩ\n" +
                "7 –∫–≥ ‚Üí 173 $ ‚Üí 23568 ‚ÇΩ\n" +
                "8 –∫–≥ ‚Üí 194 $ ‚Üí 26384 ‚ÇΩ\n" +
                "9 –∫–≥ ‚Üí 213 $ ‚Üí 28968 ‚ÇΩ\n" +
                "10 –∫–≥ ‚Üí 234 $ ‚Üí 31824 ‚ÇΩ\n" +
                "11 –∫–≥ ‚Üí 254 $ ‚Üí 34544 ‚ÇΩ\n" +
                "12 –∫–≥ ‚Üí 274 $ ‚Üí 37264 ‚ÇΩ\n" +
                "13 –∫–≥ ‚Üí 295 $ ‚Üí 40120 ‚ÇΩ\n" +
                "14 –∫–≥ ‚Üí 315 $ ‚Üí 42840 ‚ÇΩ\n" +
                "15 –∫–≥ ‚Üí 335 $ ‚Üí 45560 ‚ÇΩ\n\n" +
                "–°—Ä–æ–∫: 10 –¥–Ω–µ–π ‚Äî 4 –Ω–µ–¥–µ–ª–∏\n" +
                "–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö –ø–æ –∫—É—Ä—Å—É –µ–≤—Ä–æ –Ω–∞ 13.01.2025 –∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.";

        String europeDeliveryInfo = "üì¶ –î–û–°–¢–ê–í–ö–ê –ò–ó –ï–í–†–û–ü–´ (–û–§–õ–ê–ô–ù-–ú–ê–ì–ê–ó–ò–ù–´)\n\n" +
                "1 –∫–≥ ‚Üí 35 $ ‚Üí 5075 ‚ÇΩ\n" +
                "2 –∫–≥ ‚Üí 39 $ ‚Üí 5655 ‚ÇΩ\n" +
                "3 –∫–≥ ‚Üí 44 $ ‚Üí 6380 ‚ÇΩ\n" +
                "4 –∫–≥ ‚Üí 48 $ ‚Üí 6960 ‚ÇΩ\n" +
                "5 –∫–≥ ‚Üí 53 $ ‚Üí 7685 ‚ÇΩ\n" +
                "6 –∫–≥ ‚Üí 57 $ ‚Üí 8265 ‚ÇΩ\n" +
                "7 –∫–≥ ‚Üí 62 $ ‚Üí 8990 ‚ÇΩ\n" +
                "8 –∫–≥ ‚Üí 66 $ ‚Üí 9570 ‚ÇΩ\n" +
                "9 –∫–≥ ‚Üí 71 $ ‚Üí 10295 ‚ÇΩ\n" +
                "10 –∫–≥ ‚Üí 75 $ ‚Üí 10875 ‚ÇΩ\n" +
                "11 –∫–≥ ‚Üí 79 $ ‚Üí 11455 ‚ÇΩ\n" +
                "12 –∫–≥ ‚Üí 84 $ ‚Üí 12180 ‚ÇΩ\n" +
                "13 –∫–≥ ‚Üí 89 $ ‚Üí 12905 ‚ÇΩ\n" +
                "14 –∫–≥ ‚Üí 93 $ ‚Üí 13485 ‚ÇΩ\n" +
                "15 –∫–≥ ‚Üí 98 $ ‚Üí 14210 ‚ÇΩ\n\n" +
                "–°—Ä–æ–∫:  2 ‚Äî 6 –Ω–µ–¥–µ–ª—å\n" +
                "–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö –ø–æ –∫—É—Ä—Å—É –µ–≤—Ä–æ –Ω–∞ 13.01.2025 –∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.\n\n" +
                "üì¶ –î–û–°–¢–ê–í–ö–ê (–û–ù–õ–ê–ô–ù-–ú–ê–ì–ê–ó–ò–ù–´) –ò–ó –ï–í–†–û–ü–´:\n\n" +
                "‚ñ´Ô∏è –ü–û–ß–¢–ê –†–û–°–°–ò–ò\n\n" +
                "1 –∫–≥ ‚Üí 3720 ‚ÇΩ\n" +
                "2 –∫–≥ ‚Üí 4320 ‚ÇΩ\n" +
                "3 –∫–≥ ‚Üí 4920 ‚ÇΩ\n" +
                "4 –∫–≥ ‚Üí 5520 ‚ÇΩ\n" +
                "5 –∫–≥ ‚Üí 6120 ‚ÇΩ\n" +
                "6 –∫–≥ ‚Üí 6720 ‚ÇΩ\n" +
                "7 –∫–≥ ‚Üí 7320 ‚ÇΩ\n" +
                "8 –∫–≥ ‚Üí 7920 ‚ÇΩ\n" +
                "9 –∫–≥ ‚Üí 8520 ‚ÇΩ\n" +
                "10 –∫–≥ ‚Üí 9120 ‚ÇΩ\n" +
                "11 –∫–≥ ‚Üí 9720 ‚ÇΩ\n" +
                "12 –∫–≥ ‚Üí 10320 ‚ÇΩ\n" +
                "13 –∫–≥ ‚Üí 10920 ‚ÇΩ\n" +
                "14 –∫–≥ ‚Üí 11520 ‚ÇΩ\n" +
                "15 –∫–≥ ‚Üí 12120 ‚ÇΩ\n\n" +
                "–°—Ä–æ–∫:   3-6 –Ω–µ–¥–µ–ª—å\n" +
                "–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö –ø–æ –∫—É—Ä—Å—É –µ–≤—Ä–æ –Ω–∞ 13.01.2025 –∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.\n\n" +
                "‚ñ´Ô∏è EMS (–¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –¥–≤–µ—Ä–∏)\n\n" +
                "1 –∫–≥ ‚Üí 3480 ‚ÇΩ\n" +
                "2 –∫–≥ ‚Üí 4440 ‚ÇΩ\n" +
                "3 –∫–≥ ‚Üí 5400 ‚ÇΩ\n" +
                "4 –∫–≥ ‚Üí 6360 ‚ÇΩ\n" +
                "5 –∫–≥ ‚Üí 7320 ‚ÇΩ\n" +
                "6 –∫–≥ ‚Üí 8280 ‚ÇΩ\n" +
                "7 –∫–≥ ‚Üí 9240 ‚ÇΩ\n" +
                "8 –∫–≥ ‚Üí 10080 ‚ÇΩ\n" +
                "9 –∫–≥ ‚Üí 11040 ‚ÇΩ\n" +
                "10 –∫–≥ ‚Üí 12000 ‚ÇΩ\n" +
                "11 –∫–≥ ‚Üí 12960 ‚ÇΩ\n" +
                "12 –∫–≥ ‚Üí 13920 ‚ÇΩ\n" +
                "13 –∫–≥ ‚Üí 14880 ‚ÇΩ\n" +
                "14 –∫–≥ ‚Üí 15840 ‚ÇΩ\n" +
                "15 –∫–≥ ‚Üí 16800 ‚ÇΩ\n\n" +
                "–°—Ä–æ–∫:    2-3 –Ω–µ–¥–µ–ª–∏\n" +
                "–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –≤ —Ä—É–±–ª—è—Ö –ø–æ –∫—É—Ä—Å—É –µ–≤—Ä–æ –Ω–∞ 13.01.2025 –∏ –º–æ–≥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞.";
        String additionalInfo = "–í–ê–ñ–ù–û:\n\n" +
                "‚ñ´Ô∏è –ü–æ—Ä–æ–≥ –±–µ—Å–ø–æ—à–ª–∏–Ω–Ω–æ–≥–æ –≤–≤–æ–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ - 200‚Ç¨.\n\n" +
                "‚ñ´Ô∏è –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ ‚Äî 60 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –¥–∞–ª–µ–µ ‚Äî 0,20 ‚Ç¨ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å;\n\n" +
                "‚ñ´Ô∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –º–∞–≥–∞–∑–∏–Ω ‚Äî 7‚Ç¨;\n\n" +
                "‚ñ´Ô∏è –ü–µ—Ä–µ—É–ø–∞–∫–æ–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–æ–≤–∞—Ä–æ–≤ ‚Äî 5 ‚Ç¨;\n\n" +
                "‚ñ´Ô∏è –ö–æ—Å–º–µ—Ç–∏–∫—É –∏ –ø–∞—Ä—Ñ—é–º —Å –ï–≤—Ä–æ–ø—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–æ–∂–Ω–æ.\n\n" +
                "‚ñ´Ô∏è –î–æ—Å—Ç–∞–≤–∫–∞ lux-–±—Ä–µ–Ω–¥–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Å—Ä–æ–∫ 7 –¥–Ω–µ–π, –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.\n\n" +
                "‚ñ´Ô∏è –î–æ—Å—Ç–∞–≤–∫–∞ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö —É–∫—Ä–∞—à–µ–Ω–∏–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∫—É—Ä—å–µ—Ä–æ–º, –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.\n\n" +
                "‚ñ´Ô∏è –ó–∞–º–µ—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n\n" +
                "‚ñ´Ô∏è –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑ –ï–≤—Ä–æ–ø—ã –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä.\n\n" +
                "‚ñ´Ô∏è –£—Å–ª—É–≥–∞ —Å—Ä–µ–∑–∞–Ω–∏—è —Ü–µ–Ω–Ω–∏–∫–æ–≤ (–±–æ–ª—å—à–µ 2-—Ö) - 4‚Ç¨ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ —Ç–æ–≤–∞—Ä –∑–∞–∫–∞–∑–∞–Ω –Ω–∞ —Å–∫–∏–¥–∫–µ –∏ –Ω–∞–¥–æ –ø—Ä–æ–π—Ç–∏ —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç).";
        sendMessage(chatId, usaDeliveryInfo);
        sendMessage(chatId, europeDeliveryInfo);
        sendMessage(chatId, additionalInfo);
    }

    private void forwardMediaToManager(String fileId, String mediaType, long userChatId, Update update) {
        try {
            String userName = "";
            String firstName = update.getMessage().getChat().getFirstName();
            String lastName = update.getMessage().getChat().getLastName();

            if (firstName != null) userName += firstName;
            if (lastName != null) userName += " " + lastName;

            Integer forwardedMessageId = null;

            switch (mediaType) {
                case "photo":
                    SendPhoto sendPhoto = new SendPhoto();
                    sendPhoto.setChatId(String.valueOf(MANAGER_USER_ID));
                    sendPhoto.setPhoto(new InputFile(fileId));
                    sendPhoto.setCaption("–§–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + userName + " (ID: " + userChatId + ")");
                    forwardedMessageId = execute(sendPhoto).getMessageId();
                    break;

                case "video":
                    SendVideo sendVideo = new SendVideo();
                    sendVideo.setChatId(String.valueOf(MANAGER_USER_ID));
                    sendVideo.setVideo(new InputFile(fileId));
                    sendVideo.setCaption("–í–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + userName + " (ID: " + userChatId + ")");
                    forwardedMessageId = execute(sendVideo).getMessageId();
                    break;

                case "audio":
                    SendAudio sendAudio = new SendAudio();
                    sendAudio.setChatId(String.valueOf(MANAGER_USER_ID));
                    sendAudio.setAudio(new InputFile(fileId));
                    sendAudio.setCaption("–ê—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + userName + " (ID: " + userChatId + ")");
                    forwardedMessageId = execute(sendAudio).getMessageId();
                    break;

                case "voice":
                    SendVoice sendVoice = new SendVoice();
                    sendVoice.setChatId(String.valueOf(MANAGER_USER_ID));
                    sendVoice.setVoice(new InputFile(fileId));
                    sendVoice.setCaption("–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + userName + " (ID: " + userChatId + ")");
                    forwardedMessageId = execute(sendVoice).getMessageId();
                    break;
            }


            if (forwardedMessageId != null) {
                messageIdToUserIdMap.put(forwardedMessageId, userChatId);
                System.out.println("Mapping forwarded message ID " + forwardedMessageId + " to user ID " + userChatId);
            }

        } catch (TelegramApiException e) {
            System.out.println("Error forwarding " + mediaType + " to manager: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void sendWelcomeMessage(long chatId, String name) {
        String textToSend = name + ", –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n\n" +
                "–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –±–∞–π–µ—Ä-—Å–µ—Ä–≤–∏—Å–∞ KUPIDON, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞. –Ø –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã! \n\n" +
                "–ë–∞–π–µ—Ä-—Å–µ—Ä–≤–∏—Å KUPIDON –ø–æ–º–æ–≥–∞–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–æ–∫—É–ø–∫–∏ –∂–µ–ª–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –°–®–ê, –ï–≤—Ä–æ–ø—ã, –∞ —Ç–∞–∫–∂–µ —é–≤–µ–ª–∏—Ä–Ω—ã—Ö —É–∫—Ä–∞—à–µ–Ω–∏–π –∏–∑ –î—É–±–∞—è. \n\n" +
                "–ü–æ—á–µ–º—É —à–æ–ø–∏–Ω–≥ —Å KUPIDON ‚Äî —ç—Ç–æ –ª—É—á—à–∏–π –≤—ã–±–æ—Ä? –í–æ—Ç 5 –ø—Ä–∏—á–∏–Ω: \n\n" +
                "- –ê–¥–µ–∫–≤–∞—Ç–Ω–∞—è –Ω–∞—Ü–µ–Ω–∫–∞; \n" +
                "- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∑–∞–º–µ—Ä—ã; \n" +
                "- –¢–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥–æ–≤—ã–µ –≤–µ—â–∏ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏; \n" +
                "- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É; \n" +
                "- –í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏. \n\n" +
                "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üîª";

        sendMessageWithMainButtons(chatId, textToSend);
    }

    private void sendMessageWithMainButtons(long chatId, String textToSend) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(textToSend);

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        rowsInline.add(List.of(
                createInlineButton("–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", "https://t.me/marinakupidon", true)
        ));
        rowsInline.add(List.of(
                createInlineButton("–ö–∞—Ç–∞–ª–æ–≥", "https://t.me/kupidonbuyer", true)
        ));
        rowsInline.add(List.of(
                createInlineButton("–î–æ—Å—Ç–∞–≤–∫–∞", "delivery", false)
        ));
        rowsInline.add(List.of(
                createInlineButton("–û—Ç–∑—ã–≤—ã", "https://t.me/feedbackkupidon", true)
        ));

        markupInline.setKeyboard(rowsInline);
        message.setReplyMarkup(markupInline);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.out.println("Error sending message with buttons: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private InlineKeyboardButton createInlineButton(String text, String dataOrUrl, boolean isUrl) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        if (isUrl) {
            button.setUrl(dataOrUrl);
        } else {
            button.setCallbackData(dataOrUrl);
        }
        return button;
    }

    private void sendOrderMessage(long chatId) {
        String messageText = "–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –í–∞–º –ø–æ–º–æ—á—å ‚ù§Ô∏è\n" +
                "–°–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.\n\n" +
                "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∏–∂–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ò∫Ô∏è";

        sendMessage(chatId, messageText);
    }

    private void sendMessage(long chatId, String textToSend) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(textToSend);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.out.println("Error sending message: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void forwardToManager(Update update, long chatId, String messageText) {
        try {

            if (chatId == MANAGER_USER_ID) {
                System.out.println("Manager message cannot be forwarded to manager.");
                return;
            }

            String firstName = update.getMessage().getChat().getFirstName();
            String lastName = update.getMessage().getChat().getLastName();
            String userName = (firstName != null ? firstName : "") +
                    (lastName != null && !lastName.isEmpty() ? " " + lastName : "").trim();

            SendMessage forwardMessage = new SendMessage();
            forwardMessage.setChatId(String.valueOf(MANAGER_USER_ID));
            forwardMessage.setText(String.format("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s (ID: %d):\n\n%s", userName, chatId, messageText));

            System.out.println("Forwarding message to manager: " + messageText);

            var sentMessage = execute(forwardMessage);

            if (sentMessage != null) {
                Integer forwardedMessageId = sentMessage.getMessageId();
                if (forwardedMessageId != null) {
                    messageIdToUserIdMap.put(forwardedMessageId, chatId);
                    System.out.println("Mapping forwarded message ID " + forwardedMessageId + " to user ID " + chatId);
                } else {
                    System.out.println("Error: forwardedMessageId is null.");
                }
            } else {
                System.out.println("Failed to forward the message to the manager.");
            }
        } catch (TelegramApiException e) {
            System.out.println("Error forwarding message to manager: " + e.getMessage());
            e.printStackTrace();
        }
    }
    private void handleManagerResponse(Message replyToMessage, String managerText) {
        try {
            if (replyToMessage == null) {
                System.out.println("ReplyToMessage is null. Cannot process manager response.");
                return;
            }

            Integer repliedMessageId = replyToMessage.getMessageId();
            System.out.println("Processing reply for Message ID: " + repliedMessageId);

            Long userId = messageIdToUserIdMap.get(repliedMessageId);

            if (userId == null) {
                System.out.println("No mapping found for Message ID: " + repliedMessageId);
                return;
            }

            if (userId.equals(MANAGER_USER_ID)) {
                System.out.println("Reply appears to be for the manager. Not forwarding to user.");
                return;
            }
            System.out.println("Found mapping: User ID = " + userId);

            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(String.valueOf(userId));
            sendMessage.setText("Reply from manager:\n\n" + managerText);

            System.out.println("Sending manager's response to user: " + managerText);

            execute(sendMessage);
        } catch (TelegramApiException e) {
            System.out.println("Error sending manager's response to user: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
